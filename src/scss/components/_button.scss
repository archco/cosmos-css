//======================================================================
// Button
//======================================================================

// placeholder
%btn-common {
  @include btn-base;
  display: inline-block;
  vertical-align: middle;
  text-align: center;
}
%btn {
  @extend %btn-common;
  padding: 0.5em 1em;
  margin: 0.2em;
  outline-color: $button-outline-color;
  border-radius: $button-radius;

  &.full-width {
    margin-left: 0;
    margin-right: 0;
  }
  &.is-loading:not([disabled]) {
    position: relative;
    color: transparent !important;

    &:after {
      @include loaderOne();
      position: absolute;
      top: 50%;
      left: 50%;
      margin-top: -0.5em;
      margin-left: -0.5em;
      content: '';
    }
  }
}
%btn-disabled {
  &[disabled] {
    cursor: default;
    box-shadow: none;
    opacity: 0.7;
  }
}
%btn-color-set {
  // default color
  @include btnColor($primary-color);
  // each color-set
  @each $name, $color in $color-set {
    &.#{$name} {
      @include btnColor($color);

      &.is-loading:not([disabled]):after {
        border-color: get-contrast($color);
        border-right-color: transparent;
        border-top-color: transparent;
      }
    }
  }
}
%btn-flat-color-set {
  // default color
  @include btnFlatColor($link-color);
  // each color-set
  @each $name, $color in $color-set {
    &.#{$name} {
      @include btnFlatColor($color);
    }
  }
}

// buttons
.btn {
  @extend %btn, %btn-disabled, %btn-color-set;
}

.btn-icon {
  @extend %btn-common, %btn-disabled, %btn-color-set;
  border-radius: 50%;
  width: 2em;
  height: 2em;
}

.btn-flat {
  @extend %btn, %btn-disabled, %btn-flat-color-set;
  margin: 0;
}

//======================================================================
// Button Close
//======================================================================

.btn-close {
  @extend %btn-common;
  box-sizing: content-box;
  background-color: transparent;
  vertical-align: baseline;
  padding: 0;
  margin-left: 0.25em;
  color: rgba(#000, 0.3);
  transition: color $transition-time;

  &:hover {
    color: inherit;
  }

  &.at-corner {
    position: absolute;
    top: 0.5em;
    right: 0.5em;
  }

  &.at-right-middle {
    position: absolute;
    top: 50%;
    right: 1em;
    transform: translateY(-50%);
  }
}
