//======================================================================
// Scaffolding
//======================================================================

// used for %link-no-deco
@mixin no-decoration() {
  text-decoration: none;

  &:focus,
  &:hover {
    text-decoration: none;
  }
}

// set link state color
@mixin set-link-state-color($link, $visited: null, $hover: null, $active: null) {
  &,
  &:link {
    color: $link;
  }

  &:visited {
    color: if($visited, $visited, $link);
  }

  &:hover,
  &:focus {
    color: if($hover, $hover, $link);
  }

  &:active {
    color: if($active, $active, $link);
  }
}

//======================================================================
// Form
//======================================================================

@mixin form-inline-target() {
  input:not([type="color"]),
  select,
  textarea {
    @content;
  }
}

//======================================================================
// Loader
//======================================================================

@mixin loader-one() {
  display: inline-block;
  width: 1em;
  height: 1em;
  border-radius: 50%;
  border: .125em solid $text-color; // default color.
  border-right-color: transparent;
  border-top-color: transparent;
  animation: .5s linear 0s infinite spin;
}

@mixin loader-one-color($color: $text-color) {
  border-left-color: $color;
  border-bottom-color: $color;
}

//======================================================================
// Button
//======================================================================

@mixin btn-base() {
  @include no-decoration;
  line-height: 1.15;
  white-space: nowrap;
  border: 0;
  cursor: pointer;
  user-select: none;
}

@mixin btn-color($bg-color, $color: $button-color) {
  @if not $button-color-is-enable {
    $color: get-contrast($bg-color);
  }

  color: $color;
  background-color: $bg-color;
  outline-color: $bg-color;
  transition: background-color $transition-time, box-shadow $transition-time;

  &:link,
  &:visited {
    color: $color;
  }

  &:focus:not([disabled]),
  &:hover:not([disabled]) {
    color: $color;
    background-color: lighten($bg-color, 4%);
    box-shadow: $shadow-normal;
  }

  &:active:not([disabled]) {
    color: $color;
    background-color: darken($bg-color, 4%);
    box-shadow: $shadow-near;
  }
}

@mixin btn-flat-color($color) {
  color: $color;
  background-color: transparent;
  outline-color: rgba($color, .2);
  transition: color $transition-time, background-color $transition-time;

  &:focus:not([disabled]),
  &:hover:not([disabled]) {
    color: $color;
    background-color: rgba($color, .1);
  }

  &:active:not([disabled]) {
    color: $color;
    background-color: rgba($color, .2);
  }
}


//======================================================================
// Utilities
//======================================================================

// clear-both
@mixin clear-both() {
  &::after {
    display: block;
    clear: both;
    content: '';
  }
}

// debug outline
@mixin debug() {
  &.outline {
    * {
      $_outline-color: rgba(#f00, .5);
      outline: 1px solid $_outline-color;
    }
  }
}

// reset-text
@mixin reset-text() {
  font-family: $font-base;
  // We deliberately do NOT reset font-size or word-wrap.
  font-style: normal;
  font-weight: normal;
  letter-spacing: normal;
  line-break: auto;
  line-height: 1.15;
  text-align: start;
  text-decoration: none;
  text-shadow: none;
  text-transform: none;
  white-space: normal;
  word-break: normal;
  word-spacing: normal;
}

@mixin reset-list() {
  list-style: none;
  margin: 0;
  padding: 0;
}

//======================================================================
// Border-radius
//======================================================================
@mixin border-top-radius($radius) {
  border-top-left-radius: $radius;
  border-top-right-radius: $radius;
}

@mixin border-right-radius($radius) {
  border-top-right-radius: $radius;
  border-bottom-right-radius: $radius;
}

@mixin border-bottom-radius($radius) {
  border-bottom-left-radius: $radius;
  border-bottom-right-radius: $radius;
}

@mixin border-left-radius($radius) {
  border-top-left-radius: $radius;
  border-bottom-left-radius: $radius;
}


//======================================================================
// Message
//======================================================================

@mixin message-box($bg-color) {
  $color: get-contrast($bg-color);

  color: $color;
  background-color: $bg-color;

  .btn-close-message {
    color: $color;
    background-color: transparent;
    transition: color $transition-time;

    &:hover {
      $_hover-color: rgba(#000, .3);
      color: $_hover-color;
    }
  }
}


//======================================================================
// Card
//======================================================================

// calculate card size
@mixin cal-card-size($size, $direction:'vertical') {
  @if ($direction == 'vertical') {
    width: $size * 1.25;
  } @else if ($direction == 'horizontal') {
    width: $size * 1.25;
  }
}

@mixin card-image-size($direction:'vertical') {
  @if ($direction == 'vertical') {
    width: 105%;
    height: auto;
  } @else if ($direction == 'horizontal') {
    width: auto;
    height: 105%;
  }
}


//======================================================================
// Media queries
//======================================================================

// base mixins
@mixin media-up($width) {
  @media only screen and (min-width: $width) {
    @content;
  }
}

@mixin media-down($width) {
  $width: $width - 1;

  @media only screen and (max-width: $width) {
    @content;
  }
}

@mixin media-between($min, $max) {
  $max: $max - 1;

  @media only screen and (min-width: $min) and (max-width: $max) {
    @content;
  }
}

// functions
@mixin media-only-mobile() {
  @include media-down($mobile-size) {
    @content;
  }
}

@mixin media-tablet-up() {
  @include media-up($mobile-size) {
    @content;
  }
}

@mixin media-tablet-down() {
  @include media-down($tablet-size) {
    @content;
  }
}

@mixin media-only-tablet() {
  @include media-between($mobile-size, $tablet-size) {
    @content;
  }
}

@mixin media-only-desktop() {
  @include media-up($tablet-size) {
    @content;
  }
}

//======================================================================
// Helper
//======================================================================

// Centering
@mixin position-center-container() {
  position: relative;
}

@mixin position-center() {
  position: absolute;
  top: 50%;
  transform: translate(0, -50%);
}

@mixin flex-container($horizontal:'flex-start', $vertical:'stretch') {
  display: flex;
  justify-content: #{$horizontal}; // horizontally
  align-items: #{$vertical}; // vertically
}

//======================================================================
// Badge
//======================================================================
@mixin badge-color($bg-color) {
  $color: get-contrast($bg-color);
  background-color: $bg-color;
  color: $color;

  &[href] {
    @include set-link-state-color($color);

    &:hover,
    &:focus {
      background-color: lighten($bg-color, 4%);
    }

    &:active {
      background-color: darken($bg-color, 4%);
    }
  }
}
